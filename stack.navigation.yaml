version: '3.9'

networks:
  gateway:
    external: true
    name: gateway-net
  navigation:
    driver: overlay
    attachable: true
    name: navigation-net

volumes:
  traccar:

configs:
  iot:
    file: ./stack.navigation.iot.xml

services:
  routing:
    image: gisops/valhalla:latest
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.routing.entrypoints=web-secure'
        - 'traefik.http.routers.routing.rule=Host(`staging.${DOMAIN}`) && PathPrefix(`/service/routing`)'
        - 'traefik.http.services.routing.loadbalancer.server.port=8002'
        - 'traefik.http.routers.routing.middlewares=routing-prefix'
        - 'traefik.http.middlewares.routing-prefix.stripprefix.prefixes=/service/routing'
      mode: replicated
      replicas: 1
    ports:
      - 8072:8002
    networks:
      - gateway
      - navigation
    environment:
      tile_urls: 'https://download.geofabrik.de/africa/nigeria-latest.osm.pbf'
      server_threads: 8
      use_tiles_ignore_pbf: 'True'
      build_elevation: 'True'
      build_admins: 'True'
      build_time_zones: 'True'
      build_tar: 'True'
      force_rebuild: 'False'
    volumes:
      - '${STORE_ROOT}/valhalla:/custom_files'
  iot:
    image: '${REGISTRY_URL}/traccar:5.3'
    build:
      context: .
      dockerfile: docker/Dockerfile.iot
    deploy:
      mode: replicated
      replicas: 1
      labels:
        ## Schedules
        - 'swarm.cronjob.enable=true'
        - 'swarm.cronjob.schedule=0 1 */3 * *'
        - 'swarm.cronjob.skip-running=false'
        # ## Domain config
        - 'traefik.enable=true'
        - 'traefik.http.services.iot.loadbalancer.server.port=8082'
        - 'traefik.http.services.iot-osmand.loadbalancer.server.port=5055'
        - 'traefik.http.middlewares.osmand-prefix.stripprefix.prefixes=/service/movement,/service/movement/'
        # ## IOT management UI
        - 'traefik.http.routers.iot-admin.entrypoints=web-secure'
        - 'traefik.http.routers.iot-admin.rule=Host(`manage-iot.${DOMAIN}`)'
        - 'traefik.http.routers.iot-admin.service=iot'
        ## IOT Web push (osmand)
        - 'traefik.http.routers.iot-osmand.entrypoints=web-secure'
        - 'traefik.http.routers.iot-osmand.rule=Host(`staging.${DOMAIN}`) && PathPrefix(`/service/movement`)'
        - 'traefik.http.routers.iot-osmand.service=iot-osmand'
        - 'traefik.http.routers.iot-osmand.middlewares=osmand-prefix'
        ## IOT GPS-103 endpoint
        - 'traefik.tcp.services.gps103.loadbalancer.server.port=5001'
        - 'traefik.tcp.routers.iot-gps103.entrypoints=iot-gps103'
        - 'traefik.tcp.routers.iot-gps103.service=gps103'
        - 'traefik.tcp.routers.iot-gps103.rule=HostSNI(`*`)'
        ## IOT TK-103 endpoint
        - 'traefik.tcp.services.tk103.loadbalancer.server.port=5002'
        - 'traefik.tcp.routers.iot-tk103.entrypoints=iot-tk103'
        - 'traefik.tcp.routers.iot-tk103.service=tk103'
        - 'traefik.tcp.routers.iot-tk103.rule=HostSNI(`*`)'
        ## IOT H02 endpoint
        - 'traefik.tcp.services.h02.loadbalancer.server.port=5013'
        - 'traefik.tcp.routers.iot-h02.entrypoints=iot-h02'
        - 'traefik.tcp.routers.iot-h02.service=h02'
        - 'traefik.tcp.routers.iot-h02.rule=HostSNI(`*`)'
        ## IOT GT06 endpoint
        - 'traefik.tcp.services.gt06.loadbalancer.server.port=5023'
        - 'traefik.tcp.routers.iot-gt06.entrypoints=iot-gt06'
        - 'traefik.tcp.routers.iot-gt06.service=gt06'
        - 'traefik.tcp.routers.iot-gt06.rule=HostSNI(`*`)'
        ## IOT CALAMP endpoint
        - 'traefik.tcp.services.calamp.loadbalancer.server.port=5082'
        - 'traefik.tcp.routers.iot-calamp.entrypoints=iot-calamp'
        - 'traefik.tcp.routers.iot-calamp.service=calamp'
        - 'traefik.tcp.routers.iot-calamp.rule=HostSNI(`*`)'
      update_config:
        parallelism: 1
        delay: 120s
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 64M
    ulimits:
      rtprio: 95
      memlock: -1
      nproc: 1024000
      nofile:
        soft: 1024000
        hard: 1024000
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - '${STORE_ROOT}/traccar-logs:/opt/traccar/logs:rw'
      - '${STORE_ROOT}/traccar-data:/opt/traccar/data:rw'
      - '/etc/timezone:/etc/timezone:ro'
      - '/etc/localtime:/etc/localtime:ro'
    configs:
      - source: iot
        target: /opt/traccar/conf/traccar.xml
    ports:
      - 8082:8082
    networks:
      - gateway
      - navigation
    healthcheck:
      test:
        ['CMD', 'printf', "\"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5055"]
      interval: 3m
      timeout: 30s
      retries: 5
