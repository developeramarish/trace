name: Build & publish Trace images
on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: 'ghcr.io/gpproton/trace.client'
            dockerfile: ./src/Client/Dockerfile
          - image: 'ghcr.io/gpproton/trace.gateway'
            dockerfile: ./src/Gateway/Dockerfile
          - image: 'ghcr.io/gpproton/trace.worker'
            dockerfile: ./src/Worker/Dockerfile
          - image: 'ghcr.io/gpproton/trace.manager'
            dockerfile: ./src/Manager/Dockerfile
          - image: 'ghcr.io/gpproton/trace.service.identity'
            dockerfile: ./src/Identity/Dockerfile
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ matrix.image }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
            type=semver,pattern={{major}},value=${{ inputs.version }}
            type=ref,event=branch,suffix=-{{ sha }}
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=false
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image Trace
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
