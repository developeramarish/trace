name: trace
solution: Trace.sln
services:
  - name: config
    image: hyness/spring-cloud-config-server
    tags:
      - infra
      - service
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: native
    volumes:
      - source: ./src/Config
        target: /config
    bindings:
      - port: 8888
        containerPort: 8888
        protocol: http
  - name: spring-boot-admin
    image: slydeveloper/spring-boot-admin
    tags:
      - infra
      - service
    env:
      - name: SPRING_BOOT_ADMIN_TITLE
        value: Trace
      - name: SPRING_BOOT_ADMIN_USER_NAME
        value: trace
      - name: SPRING_BOOT_ADMIN_USER_PASSWORD
        value: trace
      - name: SPRING_BOOT_ADMIN_SECURITY_ENABLED
        value: 'false'
    bindings:
      - port: 1111
        # containerPort: 8080
  - name: consul
    image: hashicorp/consul:1.15
    bindings:
      - port: 8500
        containerPort: 8500
        protocol: http
    tags:
      - infra
      - service
  - name: rabbitmq
    image: rabbitmq:3-management-alpine
    tags:
      - infra
      - data
      - service
    env:
      - name: RABBITMQ_DEFAULT_USER
        value: admin
      - name: RABBITMQ_DEFAULT_PASS
        value: secret
    bindings:
      - name: rabbitmq
        port: 5672
        containerPort: 5672
        protocol: rabbitmq
      - name: rabbit-http
        port: 8005
        containerPort: 8080
        protocol: http
    volumes:
      - source: ./.docker/rabbitmq
        target: /var/lib/rabbitmq
  - name: redis
    image: docker.io/redis/redis-stack:6.2.6-v6
    tags:
      - service
      - data
      - infra
    volumes:
      - source: ./.docker/redis
        target: /data
    bindings:
      - name: redis-stack-port
        port: 6379
        containerPort: 6379
        connectionString: '${host}:${port},abortConnect=false'
      - name: redis-stack-web
        port: 8011
        containerPort: 8001
        protocol: http
  - name: database
    image: docker.io/postgis/postgis:15-3.3
    tags:
      - service
      - data
      - infra
    env:
      - name: PGDATA
        value: /var/lib/postgresql/data/pgdata
      - name: POSTGRES_USER
        value: trace
      - name: POSTGRES_PASSWORD
        value: trace
      - name: POSTGRES_DB
        value: trace
    volumes:
      - source: ./.docker/postgres
        target: /var/lib/postgresql/data/pgdata
    bindings:
      - port: 5432
        containerPort: 5432
        connectionString: Server=${host};Port=${port};User Id=${env:POSTGRES_USER};Password=${env:POSTGRES_PASSWORD};
  - name: scylla
    image: scylladb/scylla:5.1
    tags:
      - service
      - data
      - infra
    bindings:
      - name: one
        port: 9042
      - name: two
        port: 9160
    volumes:
      - source: ./.docker/scylla
        target: /var/lib/scylla
  - name: zipkin
    image: openzipkin/zipkin:2
    bindings:
      - port: 9411
        containerPort: 9411
        protocol: http
    tags:
      - infra
      - service
  - name: service-identity
    tags:
      - service
    build: true
    project: src/Service/Identity/Trace.Service.Identity.csproj
  - name: service-integration
    tags:
      - service
    build: true
    project: src/Service/Integration/Trace.Service.Integration.csproj
  - name: service-operation
    tags:
      - service
    build: true
    project: src/Service/Operation/Trace.Service.Operation.csproj
  - name: service-route
    tags:
      - service
    build: true
    project: src/Service/Route/Trace.Service.Route.csproj
  - name: service-stream
    tags:
      - service
    build: true
    project: src/Service/Stream/Trace.Service.Stream.csproj
  - name: gateway
    tags:
      - service
    replicas: 1
    build: true
    workingDirectory: src/Gateway/
    project: src/Gateway/Trace.Gateway.csproj
    bindings:
      - port: 4570
  - name: manager
    tags:
      - service
    build: true
    project: src/Manager/Trace.Manager.csproj
  - name: client
    tags:
      - service
    build: true
    project: src/Client/Trace.Client.csproj
