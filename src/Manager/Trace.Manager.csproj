<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <NoWarn>AD0001</NoWarn>
    <LangVersion>preview</LangVersion>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <!-- client configuration  -->
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>..\..\client\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <SpaClientUrl>http://localhost:4581</SpaClientUrl>
    <SpaLaunchCommand>npm run dev:manager</SpaLaunchCommand>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.SpaYarp" Version="1.1.0">
      <Publish>false</Publish>
    </PackageReference>
    <PackageReference Include="AutoCrudAdmin" Version="1.1.19" />
    <PackageReference Include="Yarp.ReverseProxy" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Include="..\..\.dockerignore">
      <Link>.dockerignore</Link>
    </Content>
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <!-- Ensure PNPM is installed -->
    <Exec Command="pnpm --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project." />
    <Message Importance="high" Text="Restoring dependencies using 'pnpm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run setup" />
  </Target>

  <Target Name="PublishRunQuasar" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run setup" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:manager" />
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\spa\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>
          wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ItemGroup>
    <ProjectReference Include="..\Common\Domain\Trace.Common.Domain.csproj" />
    <ProjectReference Include="..\Common\Infrastructure\Trace.Common.Infrastructure.csproj" />
    <ProjectReference Include="..\Common\Standard\Trace.Common.Standard.csproj" />
    <ProjectReference Include="..\Common\Service\Trace.Common.Service.csproj" />
  </ItemGroup>

</Project>